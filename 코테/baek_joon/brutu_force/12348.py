n=int(input())

# 분해합은 이전 문제(분해합1)의 알고리즘을 그대로 가져왔다.
'''
이 문제의 핵심은 방대한 양의 탐색범위 -> 10^18이다
탐색범위를 줄이기위해 생각한 것은 x라는 분해합의 생성자의 범위는
x-(x의 자리수 * 9)부터 x까지의 숫자임을 이용했다.

ex) n이 1000이면 1000을 만드는 생성자는 [1000-9*4, 1000) 사이에 숫자일 것이다.
이유 : 1000을 만드는 생성자는 977이다 (977 + 9 + 7 + 7 +7) 
그럼 생성자가 999인 분해합은 999 + 9*3일 것이다.
여기서 3자리 숫자의 분해합의 생성자는 1000-9*3 이내의 범위인 것을 알 수 있다.

위 사실을 통해 4자리의 숫자 y의 생성자는  [y-9*4, y)의 범위에 있고
5자리 숫자 z의 생성자는 [z-9*5, z)
...
n자리의 숫자의 생성자는 [n-9*(n의 자릿수), n)임을 도출했다.
'''
for i in range(max(0, n-9*len(str(n))), n+1):
    # 원래는 range(n-9*len(str(n)))로 했는데 일의 자리수는 오류가 나서(i가 음수)
    # max를 활용해 0과 n-9*len(str(n)) 로 해결했다
    hap = i+ sum(map(int, str(i)))
        

    if n==hap:
        print(i)
        break
    if i==n:
        print(0)
        break
